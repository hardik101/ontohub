%h2{'style' => 'display: inline-block'}
  %span= resource.class.name
  %span= link_to resource
  %small
    -if !resource.language_id.nil?
      = link_to resource.language, resource.language
    - else
      = 'unknown'
    - unless resource.distributed?
      = '/'
      = link_to resource.logic.to_s, resource.logic
  - if resource.state != 'done'
    %small#ontology-state{ class: resource.state, 'data-uri' => url_for(resource) }
      = status resource

= render partial: '/ontologies/menu', locals: {resource: resource}

%p= link_to resource.iri, download_path(resource) if download_path(resource)
%p= resource.description

- if resource.oops_supported?
  = render partial: '/ontologies/oops_state', locals: {resource: resource}

%nav
  %ul.nav.nav-tabs
    - @entities.each do |entity|
      %li{:class => (entity.kind == @active_kind ? 'active' : nil)}
        %a{:href => ontology_entities_path(resource, :kind => entity.kind)}
          = entity.count == 1 ? entity.kind : entity.kind.pluralize
          %span.badge{:style => entity.count == 0 && 'display:none'}= entity.count
    - pages.each do |page, path, count|
      %li{:class => (page==current_page ? 'active' : nil)}
        %a{:href => url_for(path)}
          = page.to_s.capitalize
          - if count # hide counter if empty
            %span.badge{:style => count==0 && 'display:none'}= count

